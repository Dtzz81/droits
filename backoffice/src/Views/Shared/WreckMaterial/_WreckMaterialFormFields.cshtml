@model WreckMaterialForm

<div class="js-wreck-material-form">
    @Html.HiddenFor(m => m.DroitId)


    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
    @Html.LabelFor(m => m.Description, new { @class = "col-form-label" })
    @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Quantity, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Value, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Value, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Value, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReceiverValuation, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ReceiverValuation, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ReceiverValuation, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ValueConfirmed, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.ValueConfirmed, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ValueConfirmed, "", new { @class = "text-danger" })
    </div>

    @* <div class="form-group">
        @Html.LabelFor(m => m.Images, new { @class = "col-form-label" })
        @Html.TextBoxFor(m => m.Images, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Images, "", new { @class = "text-danger" })
    </div> *@

    <div class="form-group">
        @Html.LabelFor(m => m.WreckMaterialOwner, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.WreckMaterialOwner, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.WreckMaterialOwner, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Purchaser, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Purchaser, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Purchaser, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Outcome, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Outcome, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Outcome, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.WhereSecured, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.WhereSecured, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.WhereSecured, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ImportedFromLegacy, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.ImportedFromLegacy, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ImportedFromLegacy, "", new { @class = "text-danger" })
    </div>

    <button type="button" class="btn btn-danger js-remove-wreck-material-form">Remove</button>

</div>
