@using X.PagedList
@model ListView<object>
@{
    IPagedList<object> pagedItems = new StaticPagedList<object>(Model.Items, Model.PageNumber, Model.PageSize, Model.TotalCount);
    var startIndex = (Model.PageNumber - 1) * Model.PageSize + 1;
    var endIndex = Math.Min(startIndex + Model.Items.Count - 1, Model.TotalCount);
}


<div class="row justify-content-center mb-1">
    <div class="col text-center">
           Showing @startIndex-@endIndex of @Model.TotalCount @("result".Pluralize(Model.TotalCount))
    </div>
</div>


<ul class="pagination justify-content-center">
    @if (pagedItems.HasPreviousPage)
    {
        <li class="page-item">
            <a class="page-link js-page-link" data-page-number="@(pagedItems.PageNumber - 1)">Previous</a>
        </li>
    }

    @for (var i = 1; i <= pagedItems.PageCount; i++)
    {
        @if (pagedItems.PageCount <= 10 || i <= 3 || i > pagedItems.PageCount - 3 || (i >= pagedItems.PageNumber - 1 && i <= pagedItems.PageNumber + 1))
        {
            <li role="button" class="page-item @(i == pagedItems.PageNumber ? "active" : "")">
                <a class="page-link js-page-link" data-page-number="@(i)">@i</a>
            </li>
        }
        else if (i == 4 || i == pagedItems.PageCount - 3)
        {
            <li role="button" class="page-item disabled">
                <a class="page-link">...</a>
            </li>
        }
    }

    @if (pagedItems.HasNextPage)
    {
        <li role="button" class="page-item">
            <a class="page-link js-page-link" data-page-number="@(pagedItems.PageNumber + 1)">Next</a>
        </li>
    }
</ul>