@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@model DroitSearchForm

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="droit-tab" data-bs-toggle="tab" data-bs-target="#droit" type="button" role="tab" aria-controls="droit" aria-selected="true">Droit Report</button>
    </li>
    @* <li class="nav-item" role="presentation"> *@
    @*     <button class="nav-link" id="location-tab" data-bs-toggle="tab" data-bs-target="#location" type="button" role="tab" aria-controls="location" aria-selected="false">Location</button> *@
    @* </li> *@
    @* <li class="nav-item" role="presentation"> *@
    @*     <button class="nav-link" id="salvage-tab" data-bs-toggle="tab" data-bs-target="#salvage" type="button" role="tab" aria-controls="salvage" aria-selected="false">Salvage</button> *@
    @* </li> *@
    @* <li class="nav-item" role="presentation"> *@
    @*     <button class="nav-link" id="legacy-tab" data-bs-toggle="tab" data-bs-target="#legacy" type="button" role="tab" aria-controls="legacy" aria-selected="false">Legacy</button> *@
    @* </li> *@
</ul>

<form class="form-horizontal" asp-action="SearchDroits" enctype="multipart/form-data" method="POST">

<div class="tab-content mt-4" id="droitForm">
<div class="tab-pane fade show active" id="droit" role="tabpanel" aria-labelledby="droit-tab">
    <div class="form-floating mb-3">
        @Html.EditorFor(m => m.Reference, new { htmlAttributes = new { @class = "form-control", @placeholder=""} })    
        @Html.LabelFor(m => m.Reference)
    </div>
    
    <div class="row form-row">
            <div class="col">
                <div class="form-floating mb-3">
                    @Html.EditorFor(m => m.CreatedFrom, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                    @Html.LabelFor(m => m.CreatedFrom)
                </div>
            </div>
            <div class="col">
                <div class="form-floating mb-3">
                    @Html.EditorFor(m => m.CreatedTo, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                    @Html.LabelFor(m => m.CreatedTo)
                </div>
            </div>
        </div>
        
    
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LastModifiedFrom, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                @Html.LabelFor(m => m.LastModifiedFrom)
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LastModifiedTo, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                @Html.LabelFor(m => m.LastModifiedTo)
            </div>
        </div>
    </div>

    <div class="form-floating mb-3">
        <select class="form-control js-search-droit-status" id="StatusList" multiple="multiple" name="StatusList" placeholder="">
            @foreach (var o in Html.GetEnumSelectList(typeof(DroitStatus)))
            {
                if (@Model.SelectedStatusList.Contains(int.Parse(o.Value)))
                {
                    <option value="@o.Value" selected="selected">@o.Text</option>
                }
                else
                {
                    <option value="@o.Value">@o.Text</option>
    
                }
            }
        </select>
    </div>
    
    @* <div class="form-group"> *@
    @*     @Html.LabelFor(m => m.AssignedToUserId, "Select RoW", new { @class = "col-form-label" }) *@
    @*     @Html.DropDownListFor(m => m.AssignedToUserId, Model.AllUsers, "Unassigned", new { @id = "js-select-user", @class = "form-control" }) *@
    @*     @Html.ValidationMessageFor(m => m.AssignedToUserId, "", new { @class = "text-danger" }) *@
    @* </div> *@
    

    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                 @Html.EditorFor(m => m.ReportedDateFrom, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                 @Html.LabelFor(m => m.ReportedDateFrom)
            </div>
        </div>
        <div class="col">
           <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ReportedDateTo, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                @Html.LabelFor(m => m.ReportedDateTo)
           </div>
        </div>
    </div>
    
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                 @Html.EditorFor(m => m.DateFoundFrom, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                 @Html.LabelFor(m => m.DateFoundFrom)
            </div>
        </div>
        <div class="col">
           <div class="form-floating mb-3">
                @Html.EditorFor(m => m.DateFoundTo, new { htmlAttributes = new { @type = "date", @class = "form-control",  @placeholder=""} })
                @Html.LabelFor(m => m.DateFoundTo)
           </div>
        </div>
    </div>
    

    <div class="form-group">
        @Html.LabelFor(m => m.IsHazardousFind, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsHazardousFind, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsHazardousFind, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsDredge, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsDredge, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsDredge, "", new { @class = "text-danger" })
    </div>
</div>

<div class="tab-pane fade" id="location" role="tabpanel" aria-labelledby="location-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.Latitude, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Longitude, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.InUkWaters, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.InUkWaters, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.InUkWaters, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LocationRadius, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LocationRadius, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LocationRadius, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Depth, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Depth, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Depth, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RecoveredFrom, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.RecoveredFrom, Html.GetEnumSelectList(typeof(RecoveredFrom)), "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.RecoveredFrom, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LocationDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LocationDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LocationDescription, "", new { @class = "text-danger" })
    </div>
</div>


<div class="tab-pane fade" id="salvage" role="tabpanel" aria-labelledby="salvage-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.SalvageAwardClaimed, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.SalvageAwardClaimed, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SalvageAwardClaimed, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesDuration, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDuration, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDuration, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesEstimatedCost, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesEstimatedCost, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesEstimatedCost, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MMOLicenceRequired, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MMOLicenceRequired, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MMOLicenceRequired, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MMOLicenceProvided, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MMOLicenceProvided, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MMOLicenceProvided, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SalvageClaimAwarded, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.SalvageClaimAwarded, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.SalvageClaimAwarded, "", new { @class = "text-danger" })
    </div>
</div>


<div class="tab-pane fade" id="legacy" role="tabpanel" aria-labelledby="legacy-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.District, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.District, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.District, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LegacyFileReference, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LegacyFileReference, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LegacyFileReference, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GoodsDischargedBy, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.GoodsDischargedBy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.GoodsDischargedBy, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateDelivered, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.DateDelivered, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.DateDelivered, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Agent, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Agent, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Agent, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RecoveredFromLegacy, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.RecoveredFromLegacy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.RecoveredFromLegacy, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ImportedFromLegacy, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.ImportedFromLegacy, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ImportedFromLegacy, "", new { @class = "text-danger" })
    </div>
</div>

<div class="col d-flex flex-row mt-4">
    <div class="align-self-end">
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</div>
</div>
</form>